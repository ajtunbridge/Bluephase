//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bluephase.Data.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BluephaseEntities : DbContext
    {
        public BluephaseEntities()
            : base("name=BluephaseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<ContactDetail> ContactDetails { get; set; }
        public virtual DbSet<CustomerAddress> CustomerAddresses { get; set; }
        public virtual DbSet<CustomerContact> CustomerContacts { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Document> Documents { get; set; }
        public virtual DbSet<DocumentType> DocumentTypes { get; set; }
        public virtual DbSet<DocumentVersion> DocumentVersions { get; set; }
        public virtual DbSet<MaterialForm> MaterialForms { get; set; }
        public virtual DbSet<Material> Materials { get; set; }
        public virtual DbSet<MaterialSupplier> MaterialSuppliers { get; set; }
        public virtual DbSet<NonConformancy> NonConformancies { get; set; }
        public virtual DbSet<PartDocument> PartDocuments { get; set; }
        public virtual DbSet<Part> Parts { get; set; }
        public virtual DbSet<PartVersionDocument> PartVersionDocuments { get; set; }
        public virtual DbSet<PartVersionMaterial> PartVersionMaterials { get; set; }
        public virtual DbSet<PartVersion> PartVersions { get; set; }
        public virtual DbSet<Person> People { get; set; }
        public virtual DbSet<PersonAddress> PersonAddresses { get; set; }
        public virtual DbSet<PersonContactDetail> PersonContactDetails { get; set; }
        public virtual DbSet<ProductionCentre> ProductionCentres { get; set; }
        public virtual DbSet<ProductionCentreType> ProductionCentreTypes { get; set; }
        public virtual DbSet<ProductionOperationDocument> ProductionOperationDocuments { get; set; }
        public virtual DbSet<ProductionOperationMaterial> ProductionOperationMaterials { get; set; }
        public virtual DbSet<ProductionOperation> ProductionOperations { get; set; }
        public virtual DbSet<ProductionOrderOperation> ProductionOrderOperations { get; set; }
        public virtual DbSet<ProductionOrder> ProductionOrders { get; set; }
        public virtual DbSet<PurchaseOrderItem> PurchaseOrderItems { get; set; }
        public virtual DbSet<PurchaseOrder> PurchaseOrders { get; set; }
        public virtual DbSet<SalesOrderItemBatch> SalesOrderItemBatches { get; set; }
        public virtual DbSet<SalesOrderItem> SalesOrderItems { get; set; }
        public virtual DbSet<SupplierAddress> SupplierAddresses { get; set; }
        public virtual DbSet<SupplierContact> SupplierContacts { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<SalesOrder> SalesOrders { get; set; }
    
        public virtual int Bluephase_Addresses_Delete(Nullable<int> addressId)
        {
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_Addresses_Delete", addressIdParameter);
        }
    
        public virtual int Bluephase_Addresses_Insert(string addressLine1, string addressLine2, string city, string stateOrProvince, string postalCode, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var addressLine1Parameter = addressLine1 != null ?
                new ObjectParameter("AddressLine1", addressLine1) :
                new ObjectParameter("AddressLine1", typeof(string));
    
            var addressLine2Parameter = addressLine2 != null ?
                new ObjectParameter("AddressLine2", addressLine2) :
                new ObjectParameter("AddressLine2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateOrProvinceParameter = stateOrProvince != null ?
                new ObjectParameter("StateOrProvince", stateOrProvince) :
                new ObjectParameter("StateOrProvince", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_Addresses_Insert", addressLine1Parameter, addressLine2Parameter, cityParameter, stateOrProvinceParameter, postalCodeParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_Addresses_Select_Result> Bluephase_Addresses_Select(Nullable<int> addressId)
        {
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_Addresses_Select_Result>("Bluephase_Addresses_Select", addressIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_Addresses_SelectAll_Result> Bluephase_Addresses_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_Addresses_SelectAll_Result>("Bluephase_Addresses_SelectAll");
        }
    
        public virtual int Bluephase_Addresses_Update(Nullable<int> addressId, string addressLine1, string addressLine2, string city, string stateOrProvince, string postalCode, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            var addressLine1Parameter = addressLine1 != null ?
                new ObjectParameter("AddressLine1", addressLine1) :
                new ObjectParameter("AddressLine1", typeof(string));
    
            var addressLine2Parameter = addressLine2 != null ?
                new ObjectParameter("AddressLine2", addressLine2) :
                new ObjectParameter("AddressLine2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateOrProvinceParameter = stateOrProvince != null ?
                new ObjectParameter("StateOrProvince", stateOrProvince) :
                new ObjectParameter("StateOrProvince", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_Addresses_Update", addressIdParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateOrProvinceParameter, postalCodeParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_ContactDetails_Delete(Nullable<int> contactDetailId)
        {
            var contactDetailIdParameter = contactDetailId.HasValue ?
                new ObjectParameter("ContactDetailId", contactDetailId) :
                new ObjectParameter("ContactDetailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_ContactDetails_Delete", contactDetailIdParameter);
        }
    
        public virtual int Bluephase_ContactDetails_Insert(string type, string value, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_ContactDetails_Insert", typeParameter, valueParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_ContactDetails_Select_Result> Bluephase_ContactDetails_Select(Nullable<int> contactDetailId)
        {
            var contactDetailIdParameter = contactDetailId.HasValue ?
                new ObjectParameter("ContactDetailId", contactDetailId) :
                new ObjectParameter("ContactDetailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_ContactDetails_Select_Result>("Bluephase_ContactDetails_Select", contactDetailIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_ContactDetails_SelectAll_Result> Bluephase_ContactDetails_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_ContactDetails_SelectAll_Result>("Bluephase_ContactDetails_SelectAll");
        }
    
        public virtual int Bluephase_ContactDetails_Update(Nullable<int> contactDetailId, string type, string value, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var contactDetailIdParameter = contactDetailId.HasValue ?
                new ObjectParameter("ContactDetailId", contactDetailId) :
                new ObjectParameter("ContactDetailId", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_ContactDetails_Update", contactDetailIdParameter, typeParameter, valueParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_CustomerAddresses_Delete(Nullable<int> customerId, Nullable<int> addressId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_CustomerAddresses_Delete", customerIdParameter, addressIdParameter);
        }
    
        public virtual int Bluephase_CustomerAddresses_Insert(Nullable<int> customerId, Nullable<int> addressId, string description, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_CustomerAddresses_Insert", customerIdParameter, addressIdParameter, descriptionParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_CustomerAddresses_Select_Result> Bluephase_CustomerAddresses_Select(Nullable<int> customerId, Nullable<int> addressId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_CustomerAddresses_Select_Result>("Bluephase_CustomerAddresses_Select", customerIdParameter, addressIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_CustomerAddresses_SelectAll_Result> Bluephase_CustomerAddresses_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_CustomerAddresses_SelectAll_Result>("Bluephase_CustomerAddresses_SelectAll");
        }
    
        public virtual int Bluephase_CustomerAddresses_Update(Nullable<int> customerId, Nullable<int> addressId, string description, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_CustomerAddresses_Update", customerIdParameter, addressIdParameter, descriptionParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_CustomerContacts_Delete(Nullable<int> customerId, Nullable<int> personId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_CustomerContacts_Delete", customerIdParameter, personIdParameter);
        }
    
        public virtual int Bluephase_CustomerContacts_Insert(Nullable<int> customerId, Nullable<int> personId, string position, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_CustomerContacts_Insert", customerIdParameter, personIdParameter, positionParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_CustomerContacts_Select_Result> Bluephase_CustomerContacts_Select(Nullable<int> customerId, Nullable<int> personId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_CustomerContacts_Select_Result>("Bluephase_CustomerContacts_Select", customerIdParameter, personIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_CustomerContacts_SelectAll_Result> Bluephase_CustomerContacts_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_CustomerContacts_SelectAll_Result>("Bluephase_CustomerContacts_SelectAll");
        }
    
        public virtual int Bluephase_CustomerContacts_Update(Nullable<int> customerId, Nullable<int> personId, string position, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_CustomerContacts_Update", customerIdParameter, personIdParameter, positionParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_Customers_Delete(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_Customers_Delete", customerIdParameter);
        }
    
        public virtual int Bluephase_Customers_Insert(string name, string terms, string vATNumber, Nullable<bool> approved, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var termsParameter = terms != null ?
                new ObjectParameter("Terms", terms) :
                new ObjectParameter("Terms", typeof(string));
    
            var vATNumberParameter = vATNumber != null ?
                new ObjectParameter("VATNumber", vATNumber) :
                new ObjectParameter("VATNumber", typeof(string));
    
            var approvedParameter = approved.HasValue ?
                new ObjectParameter("Approved", approved) :
                new ObjectParameter("Approved", typeof(bool));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_Customers_Insert", nameParameter, termsParameter, vATNumberParameter, approvedParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_Customers_Select_Result> Bluephase_Customers_Select(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_Customers_Select_Result>("Bluephase_Customers_Select", customerIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_Customers_SelectAll_Result> Bluephase_Customers_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_Customers_SelectAll_Result>("Bluephase_Customers_SelectAll");
        }
    
        public virtual int Bluephase_Customers_Update(Nullable<int> customerId, string name, string terms, string vATNumber, Nullable<bool> approved, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var termsParameter = terms != null ?
                new ObjectParameter("Terms", terms) :
                new ObjectParameter("Terms", typeof(string));
    
            var vATNumberParameter = vATNumber != null ?
                new ObjectParameter("VATNumber", vATNumber) :
                new ObjectParameter("VATNumber", typeof(string));
    
            var approvedParameter = approved.HasValue ?
                new ObjectParameter("Approved", approved) :
                new ObjectParameter("Approved", typeof(bool));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_Customers_Update", customerIdParameter, nameParameter, termsParameter, vATNumberParameter, approvedParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_Documents_Delete(Nullable<int> documentId)
        {
            var documentIdParameter = documentId.HasValue ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_Documents_Delete", documentIdParameter);
        }
    
        public virtual int Bluephase_Documents_Insert(string fileName, Nullable<int> documentTypeId, Nullable<bool> isApproved, byte[] permissionsBytes, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var documentTypeIdParameter = documentTypeId.HasValue ?
                new ObjectParameter("DocumentTypeId", documentTypeId) :
                new ObjectParameter("DocumentTypeId", typeof(int));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            var permissionsBytesParameter = permissionsBytes != null ?
                new ObjectParameter("PermissionsBytes", permissionsBytes) :
                new ObjectParameter("PermissionsBytes", typeof(byte[]));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_Documents_Insert", fileNameParameter, documentTypeIdParameter, isApprovedParameter, permissionsBytesParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_Documents_Select_Result> Bluephase_Documents_Select(Nullable<int> documentId)
        {
            var documentIdParameter = documentId.HasValue ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_Documents_Select_Result>("Bluephase_Documents_Select", documentIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_Documents_SelectAll_Result> Bluephase_Documents_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_Documents_SelectAll_Result>("Bluephase_Documents_SelectAll");
        }
    
        public virtual int Bluephase_Documents_Update(Nullable<int> documentId, string fileName, Nullable<int> documentTypeId, Nullable<bool> isApproved, byte[] permissionsBytes, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var documentIdParameter = documentId.HasValue ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(int));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var documentTypeIdParameter = documentTypeId.HasValue ?
                new ObjectParameter("DocumentTypeId", documentTypeId) :
                new ObjectParameter("DocumentTypeId", typeof(int));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            var permissionsBytesParameter = permissionsBytes != null ?
                new ObjectParameter("PermissionsBytes", permissionsBytes) :
                new ObjectParameter("PermissionsBytes", typeof(byte[]));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_Documents_Update", documentIdParameter, fileNameParameter, documentTypeIdParameter, isApprovedParameter, permissionsBytesParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_DocumentTypes_Delete(Nullable<int> documentTypeId)
        {
            var documentTypeIdParameter = documentTypeId.HasValue ?
                new ObjectParameter("DocumentTypeId", documentTypeId) :
                new ObjectParameter("DocumentTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_DocumentTypes_Delete", documentTypeIdParameter);
        }
    
        public virtual int Bluephase_DocumentTypes_Insert(Nullable<int> documentTypeId, string name, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var documentTypeIdParameter = documentTypeId.HasValue ?
                new ObjectParameter("DocumentTypeId", documentTypeId) :
                new ObjectParameter("DocumentTypeId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_DocumentTypes_Insert", documentTypeIdParameter, nameParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_DocumentTypes_Select_Result> Bluephase_DocumentTypes_Select(Nullable<int> documentTypeId)
        {
            var documentTypeIdParameter = documentTypeId.HasValue ?
                new ObjectParameter("DocumentTypeId", documentTypeId) :
                new ObjectParameter("DocumentTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_DocumentTypes_Select_Result>("Bluephase_DocumentTypes_Select", documentTypeIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_DocumentTypes_SelectAll_Result> Bluephase_DocumentTypes_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_DocumentTypes_SelectAll_Result>("Bluephase_DocumentTypes_SelectAll");
        }
    
        public virtual int Bluephase_DocumentTypes_Update(Nullable<int> documentTypeId, string name, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var documentTypeIdParameter = documentTypeId.HasValue ?
                new ObjectParameter("DocumentTypeId", documentTypeId) :
                new ObjectParameter("DocumentTypeId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_DocumentTypes_Update", documentTypeIdParameter, nameParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_DocumentVersions_Delete(Nullable<int> documentVersionId)
        {
            var documentVersionIdParameter = documentVersionId.HasValue ?
                new ObjectParameter("DocumentVersionId", documentVersionId) :
                new ObjectParameter("DocumentVersionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_DocumentVersions_Delete", documentVersionIdParameter);
        }
    
        public virtual int Bluephase_DocumentVersions_Insert(Nullable<int> documentId, Nullable<System.Guid> uniqueName, byte[] sHA1Hash, Nullable<System.DateTime> createdOn)
        {
            var documentIdParameter = documentId.HasValue ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(int));
    
            var uniqueNameParameter = uniqueName.HasValue ?
                new ObjectParameter("UniqueName", uniqueName) :
                new ObjectParameter("UniqueName", typeof(System.Guid));
    
            var sHA1HashParameter = sHA1Hash != null ?
                new ObjectParameter("SHA1Hash", sHA1Hash) :
                new ObjectParameter("SHA1Hash", typeof(byte[]));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_DocumentVersions_Insert", documentIdParameter, uniqueNameParameter, sHA1HashParameter, createdOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_DocumentVersions_Select_Result> Bluephase_DocumentVersions_Select(Nullable<int> documentVersionId)
        {
            var documentVersionIdParameter = documentVersionId.HasValue ?
                new ObjectParameter("DocumentVersionId", documentVersionId) :
                new ObjectParameter("DocumentVersionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_DocumentVersions_Select_Result>("Bluephase_DocumentVersions_Select", documentVersionIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_DocumentVersions_SelectAll_Result> Bluephase_DocumentVersions_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_DocumentVersions_SelectAll_Result>("Bluephase_DocumentVersions_SelectAll");
        }
    
        public virtual int Bluephase_DocumentVersions_Update(Nullable<int> documentVersionId, Nullable<int> documentId, Nullable<System.Guid> uniqueName, byte[] sHA1Hash, Nullable<System.DateTime> createdOn)
        {
            var documentVersionIdParameter = documentVersionId.HasValue ?
                new ObjectParameter("DocumentVersionId", documentVersionId) :
                new ObjectParameter("DocumentVersionId", typeof(int));
    
            var documentIdParameter = documentId.HasValue ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(int));
    
            var uniqueNameParameter = uniqueName.HasValue ?
                new ObjectParameter("UniqueName", uniqueName) :
                new ObjectParameter("UniqueName", typeof(System.Guid));
    
            var sHA1HashParameter = sHA1Hash != null ?
                new ObjectParameter("SHA1Hash", sHA1Hash) :
                new ObjectParameter("SHA1Hash", typeof(byte[]));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_DocumentVersions_Update", documentVersionIdParameter, documentIdParameter, uniqueNameParameter, sHA1HashParameter, createdOnParameter);
        }
    
        public virtual int Bluephase_MaterialForms_Delete(Nullable<int> materialFormId)
        {
            var materialFormIdParameter = materialFormId.HasValue ?
                new ObjectParameter("MaterialFormId", materialFormId) :
                new ObjectParameter("MaterialFormId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_MaterialForms_Delete", materialFormIdParameter);
        }
    
        public virtual int Bluephase_MaterialForms_Insert(Nullable<int> materialFormId, string name, Nullable<int> parentMaterialFormId, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var materialFormIdParameter = materialFormId.HasValue ?
                new ObjectParameter("MaterialFormId", materialFormId) :
                new ObjectParameter("MaterialFormId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var parentMaterialFormIdParameter = parentMaterialFormId.HasValue ?
                new ObjectParameter("ParentMaterialFormId", parentMaterialFormId) :
                new ObjectParameter("ParentMaterialFormId", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_MaterialForms_Insert", materialFormIdParameter, nameParameter, parentMaterialFormIdParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_MaterialForms_Select_Result> Bluephase_MaterialForms_Select(Nullable<int> materialFormId)
        {
            var materialFormIdParameter = materialFormId.HasValue ?
                new ObjectParameter("MaterialFormId", materialFormId) :
                new ObjectParameter("MaterialFormId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_MaterialForms_Select_Result>("Bluephase_MaterialForms_Select", materialFormIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_MaterialForms_SelectAll_Result> Bluephase_MaterialForms_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_MaterialForms_SelectAll_Result>("Bluephase_MaterialForms_SelectAll");
        }
    
        public virtual int Bluephase_MaterialForms_Update(Nullable<int> materialFormId, string name, Nullable<int> parentMaterialFormId, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var materialFormIdParameter = materialFormId.HasValue ?
                new ObjectParameter("MaterialFormId", materialFormId) :
                new ObjectParameter("MaterialFormId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var parentMaterialFormIdParameter = parentMaterialFormId.HasValue ?
                new ObjectParameter("ParentMaterialFormId", parentMaterialFormId) :
                new ObjectParameter("ParentMaterialFormId", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_MaterialForms_Update", materialFormIdParameter, nameParameter, parentMaterialFormIdParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_Materials_Delete(Nullable<int> materialId)
        {
            var materialIdParameter = materialId.HasValue ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_Materials_Delete", materialIdParameter);
        }
    
        public virtual int Bluephase_Materials_Insert(string name, Nullable<int> materialFormId, Nullable<double> minStockLevel, Nullable<double> maxStockLevel, string unitOfMeasurement, byte[] imageBytes, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var materialFormIdParameter = materialFormId.HasValue ?
                new ObjectParameter("MaterialFormId", materialFormId) :
                new ObjectParameter("MaterialFormId", typeof(int));
    
            var minStockLevelParameter = minStockLevel.HasValue ?
                new ObjectParameter("MinStockLevel", minStockLevel) :
                new ObjectParameter("MinStockLevel", typeof(double));
    
            var maxStockLevelParameter = maxStockLevel.HasValue ?
                new ObjectParameter("MaxStockLevel", maxStockLevel) :
                new ObjectParameter("MaxStockLevel", typeof(double));
    
            var unitOfMeasurementParameter = unitOfMeasurement != null ?
                new ObjectParameter("UnitOfMeasurement", unitOfMeasurement) :
                new ObjectParameter("UnitOfMeasurement", typeof(string));
    
            var imageBytesParameter = imageBytes != null ?
                new ObjectParameter("ImageBytes", imageBytes) :
                new ObjectParameter("ImageBytes", typeof(byte[]));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_Materials_Insert", nameParameter, materialFormIdParameter, minStockLevelParameter, maxStockLevelParameter, unitOfMeasurementParameter, imageBytesParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_Materials_Select_Result> Bluephase_Materials_Select(Nullable<int> materialId)
        {
            var materialIdParameter = materialId.HasValue ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_Materials_Select_Result>("Bluephase_Materials_Select", materialIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_Materials_SelectAll_Result> Bluephase_Materials_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_Materials_SelectAll_Result>("Bluephase_Materials_SelectAll");
        }
    
        public virtual int Bluephase_Materials_Update(Nullable<int> materialId, string name, Nullable<int> materialFormId, Nullable<double> minStockLevel, Nullable<double> maxStockLevel, string unitOfMeasurement, byte[] imageBytes, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var materialIdParameter = materialId.HasValue ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var materialFormIdParameter = materialFormId.HasValue ?
                new ObjectParameter("MaterialFormId", materialFormId) :
                new ObjectParameter("MaterialFormId", typeof(int));
    
            var minStockLevelParameter = minStockLevel.HasValue ?
                new ObjectParameter("MinStockLevel", minStockLevel) :
                new ObjectParameter("MinStockLevel", typeof(double));
    
            var maxStockLevelParameter = maxStockLevel.HasValue ?
                new ObjectParameter("MaxStockLevel", maxStockLevel) :
                new ObjectParameter("MaxStockLevel", typeof(double));
    
            var unitOfMeasurementParameter = unitOfMeasurement != null ?
                new ObjectParameter("UnitOfMeasurement", unitOfMeasurement) :
                new ObjectParameter("UnitOfMeasurement", typeof(string));
    
            var imageBytesParameter = imageBytes != null ?
                new ObjectParameter("ImageBytes", imageBytes) :
                new ObjectParameter("ImageBytes", typeof(byte[]));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_Materials_Update", materialIdParameter, nameParameter, materialFormIdParameter, minStockLevelParameter, maxStockLevelParameter, unitOfMeasurementParameter, imageBytesParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_MaterialSuppliers_Delete(Nullable<int> materialId, Nullable<int> supplierId)
        {
            var materialIdParameter = materialId.HasValue ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(int));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_MaterialSuppliers_Delete", materialIdParameter, supplierIdParameter);
        }
    
        public virtual int Bluephase_MaterialSuppliers_Insert(Nullable<int> materialId, Nullable<int> supplierId, Nullable<int> supplierContactId, Nullable<System.DateTime> tenderDate, Nullable<decimal> cost, Nullable<double> costPer, Nullable<int> leadTimeInDays, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var materialIdParameter = materialId.HasValue ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(int));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var supplierContactIdParameter = supplierContactId.HasValue ?
                new ObjectParameter("SupplierContactId", supplierContactId) :
                new ObjectParameter("SupplierContactId", typeof(int));
    
            var tenderDateParameter = tenderDate.HasValue ?
                new ObjectParameter("TenderDate", tenderDate) :
                new ObjectParameter("TenderDate", typeof(System.DateTime));
    
            var costParameter = cost.HasValue ?
                new ObjectParameter("Cost", cost) :
                new ObjectParameter("Cost", typeof(decimal));
    
            var costPerParameter = costPer.HasValue ?
                new ObjectParameter("CostPer", costPer) :
                new ObjectParameter("CostPer", typeof(double));
    
            var leadTimeInDaysParameter = leadTimeInDays.HasValue ?
                new ObjectParameter("LeadTimeInDays", leadTimeInDays) :
                new ObjectParameter("LeadTimeInDays", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_MaterialSuppliers_Insert", materialIdParameter, supplierIdParameter, supplierContactIdParameter, tenderDateParameter, costParameter, costPerParameter, leadTimeInDaysParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_MaterialSuppliers_Select_Result> Bluephase_MaterialSuppliers_Select(Nullable<int> materialId, Nullable<int> supplierId)
        {
            var materialIdParameter = materialId.HasValue ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(int));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_MaterialSuppliers_Select_Result>("Bluephase_MaterialSuppliers_Select", materialIdParameter, supplierIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_MaterialSuppliers_SelectAll_Result> Bluephase_MaterialSuppliers_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_MaterialSuppliers_SelectAll_Result>("Bluephase_MaterialSuppliers_SelectAll");
        }
    
        public virtual int Bluephase_MaterialSuppliers_Update(Nullable<int> materialId, Nullable<int> supplierId, Nullable<int> supplierContactId, Nullable<System.DateTime> tenderDate, Nullable<decimal> cost, Nullable<double> costPer, Nullable<int> leadTimeInDays, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var materialIdParameter = materialId.HasValue ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(int));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var supplierContactIdParameter = supplierContactId.HasValue ?
                new ObjectParameter("SupplierContactId", supplierContactId) :
                new ObjectParameter("SupplierContactId", typeof(int));
    
            var tenderDateParameter = tenderDate.HasValue ?
                new ObjectParameter("TenderDate", tenderDate) :
                new ObjectParameter("TenderDate", typeof(System.DateTime));
    
            var costParameter = cost.HasValue ?
                new ObjectParameter("Cost", cost) :
                new ObjectParameter("Cost", typeof(decimal));
    
            var costPerParameter = costPer.HasValue ?
                new ObjectParameter("CostPer", costPer) :
                new ObjectParameter("CostPer", typeof(double));
    
            var leadTimeInDaysParameter = leadTimeInDays.HasValue ?
                new ObjectParameter("LeadTimeInDays", leadTimeInDays) :
                new ObjectParameter("LeadTimeInDays", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_MaterialSuppliers_Update", materialIdParameter, supplierIdParameter, supplierContactIdParameter, tenderDateParameter, costParameter, costPerParameter, leadTimeInDaysParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_NonConformancies_Delete(Nullable<int> nonConformancyId)
        {
            var nonConformancyIdParameter = nonConformancyId.HasValue ?
                new ObjectParameter("NonConformancyId", nonConformancyId) :
                new ObjectParameter("NonConformancyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_NonConformancies_Delete", nonConformancyIdParameter);
        }
    
        public virtual int Bluephase_NonConformancies_Insert(Nullable<int> salesOrderItemId, Nullable<int> partVersionId, Nullable<System.DateTime> raisedOn, Nullable<int> raisedBy, Nullable<int> quantityAffected, Nullable<int> quantityRejected, string reason, string remedialAction, string preventativeAction, Nullable<System.DateTime> closedOn, Nullable<int> closedBy, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var salesOrderItemIdParameter = salesOrderItemId.HasValue ?
                new ObjectParameter("SalesOrderItemId", salesOrderItemId) :
                new ObjectParameter("SalesOrderItemId", typeof(int));
    
            var partVersionIdParameter = partVersionId.HasValue ?
                new ObjectParameter("PartVersionId", partVersionId) :
                new ObjectParameter("PartVersionId", typeof(int));
    
            var raisedOnParameter = raisedOn.HasValue ?
                new ObjectParameter("RaisedOn", raisedOn) :
                new ObjectParameter("RaisedOn", typeof(System.DateTime));
    
            var raisedByParameter = raisedBy.HasValue ?
                new ObjectParameter("RaisedBy", raisedBy) :
                new ObjectParameter("RaisedBy", typeof(int));
    
            var quantityAffectedParameter = quantityAffected.HasValue ?
                new ObjectParameter("QuantityAffected", quantityAffected) :
                new ObjectParameter("QuantityAffected", typeof(int));
    
            var quantityRejectedParameter = quantityRejected.HasValue ?
                new ObjectParameter("QuantityRejected", quantityRejected) :
                new ObjectParameter("QuantityRejected", typeof(int));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            var remedialActionParameter = remedialAction != null ?
                new ObjectParameter("RemedialAction", remedialAction) :
                new ObjectParameter("RemedialAction", typeof(string));
    
            var preventativeActionParameter = preventativeAction != null ?
                new ObjectParameter("PreventativeAction", preventativeAction) :
                new ObjectParameter("PreventativeAction", typeof(string));
    
            var closedOnParameter = closedOn.HasValue ?
                new ObjectParameter("ClosedOn", closedOn) :
                new ObjectParameter("ClosedOn", typeof(System.DateTime));
    
            var closedByParameter = closedBy.HasValue ?
                new ObjectParameter("ClosedBy", closedBy) :
                new ObjectParameter("ClosedBy", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_NonConformancies_Insert", salesOrderItemIdParameter, partVersionIdParameter, raisedOnParameter, raisedByParameter, quantityAffectedParameter, quantityRejectedParameter, reasonParameter, remedialActionParameter, preventativeActionParameter, closedOnParameter, closedByParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_NonConformancies_Select_Result> Bluephase_NonConformancies_Select(Nullable<int> nonConformancyId)
        {
            var nonConformancyIdParameter = nonConformancyId.HasValue ?
                new ObjectParameter("NonConformancyId", nonConformancyId) :
                new ObjectParameter("NonConformancyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_NonConformancies_Select_Result>("Bluephase_NonConformancies_Select", nonConformancyIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_NonConformancies_SelectAll_Result> Bluephase_NonConformancies_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_NonConformancies_SelectAll_Result>("Bluephase_NonConformancies_SelectAll");
        }
    
        public virtual int Bluephase_NonConformancies_Update(Nullable<int> nonConformancyId, Nullable<int> salesOrderItemId, Nullable<int> partVersionId, Nullable<System.DateTime> raisedOn, Nullable<int> raisedBy, Nullable<int> quantityAffected, Nullable<int> quantityRejected, string reason, string remedialAction, string preventativeAction, Nullable<System.DateTime> closedOn, Nullable<int> closedBy, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var nonConformancyIdParameter = nonConformancyId.HasValue ?
                new ObjectParameter("NonConformancyId", nonConformancyId) :
                new ObjectParameter("NonConformancyId", typeof(int));
    
            var salesOrderItemIdParameter = salesOrderItemId.HasValue ?
                new ObjectParameter("SalesOrderItemId", salesOrderItemId) :
                new ObjectParameter("SalesOrderItemId", typeof(int));
    
            var partVersionIdParameter = partVersionId.HasValue ?
                new ObjectParameter("PartVersionId", partVersionId) :
                new ObjectParameter("PartVersionId", typeof(int));
    
            var raisedOnParameter = raisedOn.HasValue ?
                new ObjectParameter("RaisedOn", raisedOn) :
                new ObjectParameter("RaisedOn", typeof(System.DateTime));
    
            var raisedByParameter = raisedBy.HasValue ?
                new ObjectParameter("RaisedBy", raisedBy) :
                new ObjectParameter("RaisedBy", typeof(int));
    
            var quantityAffectedParameter = quantityAffected.HasValue ?
                new ObjectParameter("QuantityAffected", quantityAffected) :
                new ObjectParameter("QuantityAffected", typeof(int));
    
            var quantityRejectedParameter = quantityRejected.HasValue ?
                new ObjectParameter("QuantityRejected", quantityRejected) :
                new ObjectParameter("QuantityRejected", typeof(int));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            var remedialActionParameter = remedialAction != null ?
                new ObjectParameter("RemedialAction", remedialAction) :
                new ObjectParameter("RemedialAction", typeof(string));
    
            var preventativeActionParameter = preventativeAction != null ?
                new ObjectParameter("PreventativeAction", preventativeAction) :
                new ObjectParameter("PreventativeAction", typeof(string));
    
            var closedOnParameter = closedOn.HasValue ?
                new ObjectParameter("ClosedOn", closedOn) :
                new ObjectParameter("ClosedOn", typeof(System.DateTime));
    
            var closedByParameter = closedBy.HasValue ?
                new ObjectParameter("ClosedBy", closedBy) :
                new ObjectParameter("ClosedBy", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_NonConformancies_Update", nonConformancyIdParameter, salesOrderItemIdParameter, partVersionIdParameter, raisedOnParameter, raisedByParameter, quantityAffectedParameter, quantityRejectedParameter, reasonParameter, remedialActionParameter, preventativeActionParameter, closedOnParameter, closedByParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_PartDocuments_Delete(Nullable<int> partId, Nullable<int> documentId)
        {
            var partIdParameter = partId.HasValue ?
                new ObjectParameter("PartId", partId) :
                new ObjectParameter("PartId", typeof(int));
    
            var documentIdParameter = documentId.HasValue ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_PartDocuments_Delete", partIdParameter, documentIdParameter);
        }
    
        public virtual int Bluephase_PartDocuments_Insert(Nullable<int> partId, Nullable<int> documentId, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var partIdParameter = partId.HasValue ?
                new ObjectParameter("PartId", partId) :
                new ObjectParameter("PartId", typeof(int));
    
            var documentIdParameter = documentId.HasValue ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_PartDocuments_Insert", partIdParameter, documentIdParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_PartDocuments_Select_Result> Bluephase_PartDocuments_Select(Nullable<int> partId, Nullable<int> documentId)
        {
            var partIdParameter = partId.HasValue ?
                new ObjectParameter("PartId", partId) :
                new ObjectParameter("PartId", typeof(int));
    
            var documentIdParameter = documentId.HasValue ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_PartDocuments_Select_Result>("Bluephase_PartDocuments_Select", partIdParameter, documentIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_PartDocuments_SelectAll_Result> Bluephase_PartDocuments_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_PartDocuments_SelectAll_Result>("Bluephase_PartDocuments_SelectAll");
        }
    
        public virtual int Bluephase_PartDocuments_Update(Nullable<int> partId, Nullable<int> documentId, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var partIdParameter = partId.HasValue ?
                new ObjectParameter("PartId", partId) :
                new ObjectParameter("PartId", typeof(int));
    
            var documentIdParameter = documentId.HasValue ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_PartDocuments_Update", partIdParameter, documentIdParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_Parts_Delete(Nullable<int> partId)
        {
            var partIdParameter = partId.HasValue ?
                new ObjectParameter("PartId", partId) :
                new ObjectParameter("PartId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_Parts_Delete", partIdParameter);
        }
    
        public virtual int Bluephase_Parts_Insert(Nullable<int> customerId, string drawingNumber, string name, Nullable<int> assemblyPartId, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var drawingNumberParameter = drawingNumber != null ?
                new ObjectParameter("DrawingNumber", drawingNumber) :
                new ObjectParameter("DrawingNumber", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var assemblyPartIdParameter = assemblyPartId.HasValue ?
                new ObjectParameter("AssemblyPartId", assemblyPartId) :
                new ObjectParameter("AssemblyPartId", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_Parts_Insert", customerIdParameter, drawingNumberParameter, nameParameter, assemblyPartIdParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_Parts_Select_Result> Bluephase_Parts_Select(Nullable<int> partId)
        {
            var partIdParameter = partId.HasValue ?
                new ObjectParameter("PartId", partId) :
                new ObjectParameter("PartId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_Parts_Select_Result>("Bluephase_Parts_Select", partIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_Parts_SelectAll_Result> Bluephase_Parts_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_Parts_SelectAll_Result>("Bluephase_Parts_SelectAll");
        }
    
        public virtual int Bluephase_Parts_Update(Nullable<int> partId, Nullable<int> customerId, string drawingNumber, string name, Nullable<int> assemblyPartId, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var partIdParameter = partId.HasValue ?
                new ObjectParameter("PartId", partId) :
                new ObjectParameter("PartId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var drawingNumberParameter = drawingNumber != null ?
                new ObjectParameter("DrawingNumber", drawingNumber) :
                new ObjectParameter("DrawingNumber", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var assemblyPartIdParameter = assemblyPartId.HasValue ?
                new ObjectParameter("AssemblyPartId", assemblyPartId) :
                new ObjectParameter("AssemblyPartId", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_Parts_Update", partIdParameter, customerIdParameter, drawingNumberParameter, nameParameter, assemblyPartIdParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_PartVersionDocuments_Delete(Nullable<int> partVersionId, Nullable<int> documentId)
        {
            var partVersionIdParameter = partVersionId.HasValue ?
                new ObjectParameter("PartVersionId", partVersionId) :
                new ObjectParameter("PartVersionId", typeof(int));
    
            var documentIdParameter = documentId.HasValue ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_PartVersionDocuments_Delete", partVersionIdParameter, documentIdParameter);
        }
    
        public virtual int Bluephase_PartVersionDocuments_Insert(Nullable<int> partVersionId, Nullable<int> documentId, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var partVersionIdParameter = partVersionId.HasValue ?
                new ObjectParameter("PartVersionId", partVersionId) :
                new ObjectParameter("PartVersionId", typeof(int));
    
            var documentIdParameter = documentId.HasValue ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_PartVersionDocuments_Insert", partVersionIdParameter, documentIdParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_PartVersionDocuments_Select_Result> Bluephase_PartVersionDocuments_Select(Nullable<int> partVersionId, Nullable<int> documentId)
        {
            var partVersionIdParameter = partVersionId.HasValue ?
                new ObjectParameter("PartVersionId", partVersionId) :
                new ObjectParameter("PartVersionId", typeof(int));
    
            var documentIdParameter = documentId.HasValue ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_PartVersionDocuments_Select_Result>("Bluephase_PartVersionDocuments_Select", partVersionIdParameter, documentIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_PartVersionDocuments_SelectAll_Result> Bluephase_PartVersionDocuments_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_PartVersionDocuments_SelectAll_Result>("Bluephase_PartVersionDocuments_SelectAll");
        }
    
        public virtual int Bluephase_PartVersionDocuments_Update(Nullable<int> partVersionId, Nullable<int> documentId, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var partVersionIdParameter = partVersionId.HasValue ?
                new ObjectParameter("PartVersionId", partVersionId) :
                new ObjectParameter("PartVersionId", typeof(int));
    
            var documentIdParameter = documentId.HasValue ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_PartVersionDocuments_Update", partVersionIdParameter, documentIdParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_PartVersionMaterials_Delete(Nullable<int> partVersionMaterialId)
        {
            var partVersionMaterialIdParameter = partVersionMaterialId.HasValue ?
                new ObjectParameter("PartVersionMaterialId", partVersionMaterialId) :
                new ObjectParameter("PartVersionMaterialId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_PartVersionMaterials_Delete", partVersionMaterialIdParameter);
        }
    
        public virtual int Bluephase_PartVersionMaterials_Insert(Nullable<int> partVersionId, Nullable<int> materialId, Nullable<double> quantityRequired, Nullable<int> quantityPer, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var partVersionIdParameter = partVersionId.HasValue ?
                new ObjectParameter("PartVersionId", partVersionId) :
                new ObjectParameter("PartVersionId", typeof(int));
    
            var materialIdParameter = materialId.HasValue ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(int));
    
            var quantityRequiredParameter = quantityRequired.HasValue ?
                new ObjectParameter("QuantityRequired", quantityRequired) :
                new ObjectParameter("QuantityRequired", typeof(double));
    
            var quantityPerParameter = quantityPer.HasValue ?
                new ObjectParameter("QuantityPer", quantityPer) :
                new ObjectParameter("QuantityPer", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_PartVersionMaterials_Insert", partVersionIdParameter, materialIdParameter, quantityRequiredParameter, quantityPerParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_PartVersionMaterials_Select_Result> Bluephase_PartVersionMaterials_Select(Nullable<int> partVersionMaterialId)
        {
            var partVersionMaterialIdParameter = partVersionMaterialId.HasValue ?
                new ObjectParameter("PartVersionMaterialId", partVersionMaterialId) :
                new ObjectParameter("PartVersionMaterialId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_PartVersionMaterials_Select_Result>("Bluephase_PartVersionMaterials_Select", partVersionMaterialIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_PartVersionMaterials_SelectAll_Result> Bluephase_PartVersionMaterials_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_PartVersionMaterials_SelectAll_Result>("Bluephase_PartVersionMaterials_SelectAll");
        }
    
        public virtual int Bluephase_PartVersionMaterials_Update(Nullable<int> partVersionMaterialId, Nullable<int> partVersionId, Nullable<int> materialId, Nullable<double> quantityRequired, Nullable<int> quantityPer, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var partVersionMaterialIdParameter = partVersionMaterialId.HasValue ?
                new ObjectParameter("PartVersionMaterialId", partVersionMaterialId) :
                new ObjectParameter("PartVersionMaterialId", typeof(int));
    
            var partVersionIdParameter = partVersionId.HasValue ?
                new ObjectParameter("PartVersionId", partVersionId) :
                new ObjectParameter("PartVersionId", typeof(int));
    
            var materialIdParameter = materialId.HasValue ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(int));
    
            var quantityRequiredParameter = quantityRequired.HasValue ?
                new ObjectParameter("QuantityRequired", quantityRequired) :
                new ObjectParameter("QuantityRequired", typeof(double));
    
            var quantityPerParameter = quantityPer.HasValue ?
                new ObjectParameter("QuantityPer", quantityPer) :
                new ObjectParameter("QuantityPer", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_PartVersionMaterials_Update", partVersionMaterialIdParameter, partVersionIdParameter, materialIdParameter, quantityRequiredParameter, quantityPerParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_PartVersions_Delete(Nullable<int> partVersionId)
        {
            var partVersionIdParameter = partVersionId.HasValue ?
                new ObjectParameter("PartVersionId", partVersionId) :
                new ObjectParameter("PartVersionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_PartVersions_Delete", partVersionIdParameter);
        }
    
        public virtual int Bluephase_PartVersions_Insert(Nullable<int> partId, string versionNumber, byte[] imageBytes, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var partIdParameter = partId.HasValue ?
                new ObjectParameter("PartId", partId) :
                new ObjectParameter("PartId", typeof(int));
    
            var versionNumberParameter = versionNumber != null ?
                new ObjectParameter("VersionNumber", versionNumber) :
                new ObjectParameter("VersionNumber", typeof(string));
    
            var imageBytesParameter = imageBytes != null ?
                new ObjectParameter("ImageBytes", imageBytes) :
                new ObjectParameter("ImageBytes", typeof(byte[]));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_PartVersions_Insert", partIdParameter, versionNumberParameter, imageBytesParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_PartVersions_Select_Result> Bluephase_PartVersions_Select(Nullable<int> partVersionId)
        {
            var partVersionIdParameter = partVersionId.HasValue ?
                new ObjectParameter("PartVersionId", partVersionId) :
                new ObjectParameter("PartVersionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_PartVersions_Select_Result>("Bluephase_PartVersions_Select", partVersionIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_PartVersions_SelectAll_Result> Bluephase_PartVersions_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_PartVersions_SelectAll_Result>("Bluephase_PartVersions_SelectAll");
        }
    
        public virtual int Bluephase_PartVersions_Update(Nullable<int> partVersionId, Nullable<int> partId, string versionNumber, byte[] imageBytes, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var partVersionIdParameter = partVersionId.HasValue ?
                new ObjectParameter("PartVersionId", partVersionId) :
                new ObjectParameter("PartVersionId", typeof(int));
    
            var partIdParameter = partId.HasValue ?
                new ObjectParameter("PartId", partId) :
                new ObjectParameter("PartId", typeof(int));
    
            var versionNumberParameter = versionNumber != null ?
                new ObjectParameter("VersionNumber", versionNumber) :
                new ObjectParameter("VersionNumber", typeof(string));
    
            var imageBytesParameter = imageBytes != null ?
                new ObjectParameter("ImageBytes", imageBytes) :
                new ObjectParameter("ImageBytes", typeof(byte[]));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_PartVersions_Update", partVersionIdParameter, partIdParameter, versionNumberParameter, imageBytesParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_People_Delete(Nullable<int> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_People_Delete", personIdParameter);
        }
    
        public virtual int Bluephase_People_Insert(string title, string firstName, string middleName, string lastName, string suffix, string nickName, Nullable<System.DateTime> dateOfBirth, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("Suffix", suffix) :
                new ObjectParameter("Suffix", typeof(string));
    
            var nickNameParameter = nickName != null ?
                new ObjectParameter("NickName", nickName) :
                new ObjectParameter("NickName", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_People_Insert", titleParameter, firstNameParameter, middleNameParameter, lastNameParameter, suffixParameter, nickNameParameter, dateOfBirthParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_People_Select_Result> Bluephase_People_Select(Nullable<int> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_People_Select_Result>("Bluephase_People_Select", personIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_People_SelectAll_Result> Bluephase_People_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_People_SelectAll_Result>("Bluephase_People_SelectAll");
        }
    
        public virtual int Bluephase_People_Update(Nullable<int> personId, string title, string firstName, string middleName, string lastName, string suffix, string nickName, Nullable<System.DateTime> dateOfBirth, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("Suffix", suffix) :
                new ObjectParameter("Suffix", typeof(string));
    
            var nickNameParameter = nickName != null ?
                new ObjectParameter("NickName", nickName) :
                new ObjectParameter("NickName", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_People_Update", personIdParameter, titleParameter, firstNameParameter, middleNameParameter, lastNameParameter, suffixParameter, nickNameParameter, dateOfBirthParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_PersonAddresses_Delete(Nullable<int> personId, Nullable<int> addressId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_PersonAddresses_Delete", personIdParameter, addressIdParameter);
        }
    
        public virtual int Bluephase_PersonAddresses_Insert(Nullable<int> personId, Nullable<int> addressId, string description, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_PersonAddresses_Insert", personIdParameter, addressIdParameter, descriptionParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_PersonAddresses_Select_Result> Bluephase_PersonAddresses_Select(Nullable<int> personId, Nullable<int> addressId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_PersonAddresses_Select_Result>("Bluephase_PersonAddresses_Select", personIdParameter, addressIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_PersonAddresses_SelectAll_Result> Bluephase_PersonAddresses_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_PersonAddresses_SelectAll_Result>("Bluephase_PersonAddresses_SelectAll");
        }
    
        public virtual int Bluephase_PersonAddresses_Update(Nullable<int> personId, Nullable<int> addressId, string description, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_PersonAddresses_Update", personIdParameter, addressIdParameter, descriptionParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_PersonContactDetails_Delete(Nullable<int> personId, Nullable<int> contactDetailId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var contactDetailIdParameter = contactDetailId.HasValue ?
                new ObjectParameter("ContactDetailId", contactDetailId) :
                new ObjectParameter("ContactDetailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_PersonContactDetails_Delete", personIdParameter, contactDetailIdParameter);
        }
    
        public virtual int Bluephase_PersonContactDetails_Insert(Nullable<int> personId, Nullable<int> contactDetailId, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var contactDetailIdParameter = contactDetailId.HasValue ?
                new ObjectParameter("ContactDetailId", contactDetailId) :
                new ObjectParameter("ContactDetailId", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_PersonContactDetails_Insert", personIdParameter, contactDetailIdParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_PersonContactDetails_Select_Result> Bluephase_PersonContactDetails_Select(Nullable<int> personId, Nullable<int> contactDetailId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var contactDetailIdParameter = contactDetailId.HasValue ?
                new ObjectParameter("ContactDetailId", contactDetailId) :
                new ObjectParameter("ContactDetailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_PersonContactDetails_Select_Result>("Bluephase_PersonContactDetails_Select", personIdParameter, contactDetailIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_PersonContactDetails_SelectAll_Result> Bluephase_PersonContactDetails_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_PersonContactDetails_SelectAll_Result>("Bluephase_PersonContactDetails_SelectAll");
        }
    
        public virtual int Bluephase_PersonContactDetails_Update(Nullable<int> personId, Nullable<int> contactDetailId, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var contactDetailIdParameter = contactDetailId.HasValue ?
                new ObjectParameter("ContactDetailId", contactDetailId) :
                new ObjectParameter("ContactDetailId", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_PersonContactDetails_Update", personIdParameter, contactDetailIdParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_ProductionCentres_Delete(Nullable<int> productionCentreId)
        {
            var productionCentreIdParameter = productionCentreId.HasValue ?
                new ObjectParameter("ProductionCentreId", productionCentreId) :
                new ObjectParameter("ProductionCentreId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_ProductionCentres_Delete", productionCentreIdParameter);
        }
    
        public virtual int Bluephase_ProductionCentres_Insert(string name, string uniqueName, Nullable<int> productionCentreTypeId, Nullable<decimal> hourlyRate, Nullable<double> hoursPerWeek, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var uniqueNameParameter = uniqueName != null ?
                new ObjectParameter("UniqueName", uniqueName) :
                new ObjectParameter("UniqueName", typeof(string));
    
            var productionCentreTypeIdParameter = productionCentreTypeId.HasValue ?
                new ObjectParameter("ProductionCentreTypeId", productionCentreTypeId) :
                new ObjectParameter("ProductionCentreTypeId", typeof(int));
    
            var hourlyRateParameter = hourlyRate.HasValue ?
                new ObjectParameter("HourlyRate", hourlyRate) :
                new ObjectParameter("HourlyRate", typeof(decimal));
    
            var hoursPerWeekParameter = hoursPerWeek.HasValue ?
                new ObjectParameter("HoursPerWeek", hoursPerWeek) :
                new ObjectParameter("HoursPerWeek", typeof(double));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_ProductionCentres_Insert", nameParameter, uniqueNameParameter, productionCentreTypeIdParameter, hourlyRateParameter, hoursPerWeekParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_ProductionCentres_Select_Result> Bluephase_ProductionCentres_Select(Nullable<int> productionCentreId)
        {
            var productionCentreIdParameter = productionCentreId.HasValue ?
                new ObjectParameter("ProductionCentreId", productionCentreId) :
                new ObjectParameter("ProductionCentreId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_ProductionCentres_Select_Result>("Bluephase_ProductionCentres_Select", productionCentreIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_ProductionCentres_SelectAll_Result> Bluephase_ProductionCentres_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_ProductionCentres_SelectAll_Result>("Bluephase_ProductionCentres_SelectAll");
        }
    
        public virtual int Bluephase_ProductionCentres_Update(Nullable<int> productionCentreId, string name, string uniqueName, Nullable<int> productionCentreTypeId, Nullable<decimal> hourlyRate, Nullable<double> hoursPerWeek, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var productionCentreIdParameter = productionCentreId.HasValue ?
                new ObjectParameter("ProductionCentreId", productionCentreId) :
                new ObjectParameter("ProductionCentreId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var uniqueNameParameter = uniqueName != null ?
                new ObjectParameter("UniqueName", uniqueName) :
                new ObjectParameter("UniqueName", typeof(string));
    
            var productionCentreTypeIdParameter = productionCentreTypeId.HasValue ?
                new ObjectParameter("ProductionCentreTypeId", productionCentreTypeId) :
                new ObjectParameter("ProductionCentreTypeId", typeof(int));
    
            var hourlyRateParameter = hourlyRate.HasValue ?
                new ObjectParameter("HourlyRate", hourlyRate) :
                new ObjectParameter("HourlyRate", typeof(decimal));
    
            var hoursPerWeekParameter = hoursPerWeek.HasValue ?
                new ObjectParameter("HoursPerWeek", hoursPerWeek) :
                new ObjectParameter("HoursPerWeek", typeof(double));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_ProductionCentres_Update", productionCentreIdParameter, nameParameter, uniqueNameParameter, productionCentreTypeIdParameter, hourlyRateParameter, hoursPerWeekParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_ProductionCentreTypes_Delete(Nullable<int> productionCentreTypeId)
        {
            var productionCentreTypeIdParameter = productionCentreTypeId.HasValue ?
                new ObjectParameter("ProductionCentreTypeId", productionCentreTypeId) :
                new ObjectParameter("ProductionCentreTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_ProductionCentreTypes_Delete", productionCentreTypeIdParameter);
        }
    
        public virtual int Bluephase_ProductionCentreTypes_Insert(string name, Nullable<decimal> defaultHourlyRate, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var defaultHourlyRateParameter = defaultHourlyRate.HasValue ?
                new ObjectParameter("DefaultHourlyRate", defaultHourlyRate) :
                new ObjectParameter("DefaultHourlyRate", typeof(decimal));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_ProductionCentreTypes_Insert", nameParameter, defaultHourlyRateParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_ProductionCentreTypes_Select_Result> Bluephase_ProductionCentreTypes_Select(Nullable<int> productionCentreTypeId)
        {
            var productionCentreTypeIdParameter = productionCentreTypeId.HasValue ?
                new ObjectParameter("ProductionCentreTypeId", productionCentreTypeId) :
                new ObjectParameter("ProductionCentreTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_ProductionCentreTypes_Select_Result>("Bluephase_ProductionCentreTypes_Select", productionCentreTypeIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_ProductionCentreTypes_SelectAll_Result> Bluephase_ProductionCentreTypes_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_ProductionCentreTypes_SelectAll_Result>("Bluephase_ProductionCentreTypes_SelectAll");
        }
    
        public virtual int Bluephase_ProductionCentreTypes_Update(Nullable<int> productionCentreTypeId, string name, Nullable<decimal> defaultHourlyRate, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var productionCentreTypeIdParameter = productionCentreTypeId.HasValue ?
                new ObjectParameter("ProductionCentreTypeId", productionCentreTypeId) :
                new ObjectParameter("ProductionCentreTypeId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var defaultHourlyRateParameter = defaultHourlyRate.HasValue ?
                new ObjectParameter("DefaultHourlyRate", defaultHourlyRate) :
                new ObjectParameter("DefaultHourlyRate", typeof(decimal));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_ProductionCentreTypes_Update", productionCentreTypeIdParameter, nameParameter, defaultHourlyRateParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_ProductionOperationDocuments_Delete(Nullable<int> productionOperationId, Nullable<int> documentId)
        {
            var productionOperationIdParameter = productionOperationId.HasValue ?
                new ObjectParameter("ProductionOperationId", productionOperationId) :
                new ObjectParameter("ProductionOperationId", typeof(int));
    
            var documentIdParameter = documentId.HasValue ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_ProductionOperationDocuments_Delete", productionOperationIdParameter, documentIdParameter);
        }
    
        public virtual int Bluephase_ProductionOperationDocuments_Insert(Nullable<int> productionOperationId, Nullable<int> documentId, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var productionOperationIdParameter = productionOperationId.HasValue ?
                new ObjectParameter("ProductionOperationId", productionOperationId) :
                new ObjectParameter("ProductionOperationId", typeof(int));
    
            var documentIdParameter = documentId.HasValue ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_ProductionOperationDocuments_Insert", productionOperationIdParameter, documentIdParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_ProductionOperationDocuments_Select_Result> Bluephase_ProductionOperationDocuments_Select(Nullable<int> productionOperationId, Nullable<int> documentId)
        {
            var productionOperationIdParameter = productionOperationId.HasValue ?
                new ObjectParameter("ProductionOperationId", productionOperationId) :
                new ObjectParameter("ProductionOperationId", typeof(int));
    
            var documentIdParameter = documentId.HasValue ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_ProductionOperationDocuments_Select_Result>("Bluephase_ProductionOperationDocuments_Select", productionOperationIdParameter, documentIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_ProductionOperationDocuments_SelectAll_Result> Bluephase_ProductionOperationDocuments_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_ProductionOperationDocuments_SelectAll_Result>("Bluephase_ProductionOperationDocuments_SelectAll");
        }
    
        public virtual int Bluephase_ProductionOperationDocuments_Update(Nullable<int> productionOperationId, Nullable<int> documentId, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var productionOperationIdParameter = productionOperationId.HasValue ?
                new ObjectParameter("ProductionOperationId", productionOperationId) :
                new ObjectParameter("ProductionOperationId", typeof(int));
    
            var documentIdParameter = documentId.HasValue ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_ProductionOperationDocuments_Update", productionOperationIdParameter, documentIdParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_ProductionOperationMaterials_Delete(Nullable<int> productionOperationMaterialId)
        {
            var productionOperationMaterialIdParameter = productionOperationMaterialId.HasValue ?
                new ObjectParameter("ProductionOperationMaterialId", productionOperationMaterialId) :
                new ObjectParameter("ProductionOperationMaterialId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_ProductionOperationMaterials_Delete", productionOperationMaterialIdParameter);
        }
    
        public virtual int Bluephase_ProductionOperationMaterials_Insert(Nullable<int> productionOperationId, Nullable<int> materialId, Nullable<double> quantityRequired, Nullable<int> quantityPer, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var productionOperationIdParameter = productionOperationId.HasValue ?
                new ObjectParameter("ProductionOperationId", productionOperationId) :
                new ObjectParameter("ProductionOperationId", typeof(int));
    
            var materialIdParameter = materialId.HasValue ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(int));
    
            var quantityRequiredParameter = quantityRequired.HasValue ?
                new ObjectParameter("QuantityRequired", quantityRequired) :
                new ObjectParameter("QuantityRequired", typeof(double));
    
            var quantityPerParameter = quantityPer.HasValue ?
                new ObjectParameter("QuantityPer", quantityPer) :
                new ObjectParameter("QuantityPer", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_ProductionOperationMaterials_Insert", productionOperationIdParameter, materialIdParameter, quantityRequiredParameter, quantityPerParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_ProductionOperationMaterials_Select_Result> Bluephase_ProductionOperationMaterials_Select(Nullable<int> productionOperationMaterialId)
        {
            var productionOperationMaterialIdParameter = productionOperationMaterialId.HasValue ?
                new ObjectParameter("ProductionOperationMaterialId", productionOperationMaterialId) :
                new ObjectParameter("ProductionOperationMaterialId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_ProductionOperationMaterials_Select_Result>("Bluephase_ProductionOperationMaterials_Select", productionOperationMaterialIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_ProductionOperationMaterials_SelectAll_Result> Bluephase_ProductionOperationMaterials_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_ProductionOperationMaterials_SelectAll_Result>("Bluephase_ProductionOperationMaterials_SelectAll");
        }
    
        public virtual int Bluephase_ProductionOperationMaterials_Update(Nullable<int> productionOperationMaterialId, Nullable<int> productionOperationId, Nullable<int> materialId, Nullable<double> quantityRequired, Nullable<int> quantityPer, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var productionOperationMaterialIdParameter = productionOperationMaterialId.HasValue ?
                new ObjectParameter("ProductionOperationMaterialId", productionOperationMaterialId) :
                new ObjectParameter("ProductionOperationMaterialId", typeof(int));
    
            var productionOperationIdParameter = productionOperationId.HasValue ?
                new ObjectParameter("ProductionOperationId", productionOperationId) :
                new ObjectParameter("ProductionOperationId", typeof(int));
    
            var materialIdParameter = materialId.HasValue ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(int));
    
            var quantityRequiredParameter = quantityRequired.HasValue ?
                new ObjectParameter("QuantityRequired", quantityRequired) :
                new ObjectParameter("QuantityRequired", typeof(double));
    
            var quantityPerParameter = quantityPer.HasValue ?
                new ObjectParameter("QuantityPer", quantityPer) :
                new ObjectParameter("QuantityPer", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_ProductionOperationMaterials_Update", productionOperationMaterialIdParameter, productionOperationIdParameter, materialIdParameter, quantityRequiredParameter, quantityPerParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_ProductionOperations_Delete(Nullable<int> productionOperationId)
        {
            var productionOperationIdParameter = productionOperationId.HasValue ?
                new ObjectParameter("ProductionOperationId", productionOperationId) :
                new ObjectParameter("ProductionOperationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_ProductionOperations_Delete", productionOperationIdParameter);
        }
    
        public virtual int Bluephase_ProductionOperations_Insert(Nullable<int> partVersionId, Nullable<int> sequence, string description, Nullable<double> setupTime, Nullable<double> cycleTime, Nullable<int> productionCentreId, Nullable<int> costUpliftPercentage, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var partVersionIdParameter = partVersionId.HasValue ?
                new ObjectParameter("PartVersionId", partVersionId) :
                new ObjectParameter("PartVersionId", typeof(int));
    
            var sequenceParameter = sequence.HasValue ?
                new ObjectParameter("Sequence", sequence) :
                new ObjectParameter("Sequence", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var setupTimeParameter = setupTime.HasValue ?
                new ObjectParameter("SetupTime", setupTime) :
                new ObjectParameter("SetupTime", typeof(double));
    
            var cycleTimeParameter = cycleTime.HasValue ?
                new ObjectParameter("CycleTime", cycleTime) :
                new ObjectParameter("CycleTime", typeof(double));
    
            var productionCentreIdParameter = productionCentreId.HasValue ?
                new ObjectParameter("ProductionCentreId", productionCentreId) :
                new ObjectParameter("ProductionCentreId", typeof(int));
    
            var costUpliftPercentageParameter = costUpliftPercentage.HasValue ?
                new ObjectParameter("CostUpliftPercentage", costUpliftPercentage) :
                new ObjectParameter("CostUpliftPercentage", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_ProductionOperations_Insert", partVersionIdParameter, sequenceParameter, descriptionParameter, setupTimeParameter, cycleTimeParameter, productionCentreIdParameter, costUpliftPercentageParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_ProductionOperations_Select_Result> Bluephase_ProductionOperations_Select(Nullable<int> productionOperationId)
        {
            var productionOperationIdParameter = productionOperationId.HasValue ?
                new ObjectParameter("ProductionOperationId", productionOperationId) :
                new ObjectParameter("ProductionOperationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_ProductionOperations_Select_Result>("Bluephase_ProductionOperations_Select", productionOperationIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_ProductionOperations_SelectAll_Result> Bluephase_ProductionOperations_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_ProductionOperations_SelectAll_Result>("Bluephase_ProductionOperations_SelectAll");
        }
    
        public virtual int Bluephase_ProductionOperations_Update(Nullable<int> productionOperationId, Nullable<int> partVersionId, Nullable<int> sequence, string description, Nullable<double> setupTime, Nullable<double> cycleTime, Nullable<int> productionCentreId, Nullable<int> costUpliftPercentage, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var productionOperationIdParameter = productionOperationId.HasValue ?
                new ObjectParameter("ProductionOperationId", productionOperationId) :
                new ObjectParameter("ProductionOperationId", typeof(int));
    
            var partVersionIdParameter = partVersionId.HasValue ?
                new ObjectParameter("PartVersionId", partVersionId) :
                new ObjectParameter("PartVersionId", typeof(int));
    
            var sequenceParameter = sequence.HasValue ?
                new ObjectParameter("Sequence", sequence) :
                new ObjectParameter("Sequence", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var setupTimeParameter = setupTime.HasValue ?
                new ObjectParameter("SetupTime", setupTime) :
                new ObjectParameter("SetupTime", typeof(double));
    
            var cycleTimeParameter = cycleTime.HasValue ?
                new ObjectParameter("CycleTime", cycleTime) :
                new ObjectParameter("CycleTime", typeof(double));
    
            var productionCentreIdParameter = productionCentreId.HasValue ?
                new ObjectParameter("ProductionCentreId", productionCentreId) :
                new ObjectParameter("ProductionCentreId", typeof(int));
    
            var costUpliftPercentageParameter = costUpliftPercentage.HasValue ?
                new ObjectParameter("CostUpliftPercentage", costUpliftPercentage) :
                new ObjectParameter("CostUpliftPercentage", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_ProductionOperations_Update", productionOperationIdParameter, partVersionIdParameter, sequenceParameter, descriptionParameter, setupTimeParameter, cycleTimeParameter, productionCentreIdParameter, costUpliftPercentageParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_ProductionOrderOperations_Delete(Nullable<int> productionOrderOperationId)
        {
            var productionOrderOperationIdParameter = productionOrderOperationId.HasValue ?
                new ObjectParameter("ProductionOrderOperationId", productionOrderOperationId) :
                new ObjectParameter("ProductionOrderOperationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_ProductionOrderOperations_Delete", productionOrderOperationIdParameter);
        }
    
        public virtual int Bluephase_ProductionOrderOperations_Insert(Nullable<int> productionOrderId, Nullable<int> productionOperationId, Nullable<int> quantityFinished, Nullable<int> actualProductionCentreId, Nullable<double> actualSetupTime, Nullable<double> actualCycleTime, string status, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var productionOrderIdParameter = productionOrderId.HasValue ?
                new ObjectParameter("ProductionOrderId", productionOrderId) :
                new ObjectParameter("ProductionOrderId", typeof(int));
    
            var productionOperationIdParameter = productionOperationId.HasValue ?
                new ObjectParameter("ProductionOperationId", productionOperationId) :
                new ObjectParameter("ProductionOperationId", typeof(int));
    
            var quantityFinishedParameter = quantityFinished.HasValue ?
                new ObjectParameter("QuantityFinished", quantityFinished) :
                new ObjectParameter("QuantityFinished", typeof(int));
    
            var actualProductionCentreIdParameter = actualProductionCentreId.HasValue ?
                new ObjectParameter("ActualProductionCentreId", actualProductionCentreId) :
                new ObjectParameter("ActualProductionCentreId", typeof(int));
    
            var actualSetupTimeParameter = actualSetupTime.HasValue ?
                new ObjectParameter("ActualSetupTime", actualSetupTime) :
                new ObjectParameter("ActualSetupTime", typeof(double));
    
            var actualCycleTimeParameter = actualCycleTime.HasValue ?
                new ObjectParameter("ActualCycleTime", actualCycleTime) :
                new ObjectParameter("ActualCycleTime", typeof(double));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_ProductionOrderOperations_Insert", productionOrderIdParameter, productionOperationIdParameter, quantityFinishedParameter, actualProductionCentreIdParameter, actualSetupTimeParameter, actualCycleTimeParameter, statusParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_ProductionOrderOperations_Select_Result> Bluephase_ProductionOrderOperations_Select(Nullable<int> productionOrderOperationId)
        {
            var productionOrderOperationIdParameter = productionOrderOperationId.HasValue ?
                new ObjectParameter("ProductionOrderOperationId", productionOrderOperationId) :
                new ObjectParameter("ProductionOrderOperationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_ProductionOrderOperations_Select_Result>("Bluephase_ProductionOrderOperations_Select", productionOrderOperationIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_ProductionOrderOperations_SelectAll_Result> Bluephase_ProductionOrderOperations_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_ProductionOrderOperations_SelectAll_Result>("Bluephase_ProductionOrderOperations_SelectAll");
        }
    
        public virtual int Bluephase_ProductionOrderOperations_Update(Nullable<int> productionOrderOperationId, Nullable<int> productionOrderId, Nullable<int> productionOperationId, Nullable<int> quantityFinished, Nullable<int> actualProductionCentreId, Nullable<double> actualSetupTime, Nullable<double> actualCycleTime, string status, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var productionOrderOperationIdParameter = productionOrderOperationId.HasValue ?
                new ObjectParameter("ProductionOrderOperationId", productionOrderOperationId) :
                new ObjectParameter("ProductionOrderOperationId", typeof(int));
    
            var productionOrderIdParameter = productionOrderId.HasValue ?
                new ObjectParameter("ProductionOrderId", productionOrderId) :
                new ObjectParameter("ProductionOrderId", typeof(int));
    
            var productionOperationIdParameter = productionOperationId.HasValue ?
                new ObjectParameter("ProductionOperationId", productionOperationId) :
                new ObjectParameter("ProductionOperationId", typeof(int));
    
            var quantityFinishedParameter = quantityFinished.HasValue ?
                new ObjectParameter("QuantityFinished", quantityFinished) :
                new ObjectParameter("QuantityFinished", typeof(int));
    
            var actualProductionCentreIdParameter = actualProductionCentreId.HasValue ?
                new ObjectParameter("ActualProductionCentreId", actualProductionCentreId) :
                new ObjectParameter("ActualProductionCentreId", typeof(int));
    
            var actualSetupTimeParameter = actualSetupTime.HasValue ?
                new ObjectParameter("ActualSetupTime", actualSetupTime) :
                new ObjectParameter("ActualSetupTime", typeof(double));
    
            var actualCycleTimeParameter = actualCycleTime.HasValue ?
                new ObjectParameter("ActualCycleTime", actualCycleTime) :
                new ObjectParameter("ActualCycleTime", typeof(double));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_ProductionOrderOperations_Update", productionOrderOperationIdParameter, productionOrderIdParameter, productionOperationIdParameter, quantityFinishedParameter, actualProductionCentreIdParameter, actualSetupTimeParameter, actualCycleTimeParameter, statusParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_ProductionOrders_Delete(Nullable<int> productionOrderId)
        {
            var productionOrderIdParameter = productionOrderId.HasValue ?
                new ObjectParameter("ProductionOrderId", productionOrderId) :
                new ObjectParameter("ProductionOrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_ProductionOrders_Delete", productionOrderIdParameter);
        }
    
        public virtual int Bluephase_ProductionOrders_Insert(Nullable<int> productionOrderId, Nullable<int> salesOrderItemId, string internalReference, string status, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var productionOrderIdParameter = productionOrderId.HasValue ?
                new ObjectParameter("ProductionOrderId", productionOrderId) :
                new ObjectParameter("ProductionOrderId", typeof(int));
    
            var salesOrderItemIdParameter = salesOrderItemId.HasValue ?
                new ObjectParameter("SalesOrderItemId", salesOrderItemId) :
                new ObjectParameter("SalesOrderItemId", typeof(int));
    
            var internalReferenceParameter = internalReference != null ?
                new ObjectParameter("InternalReference", internalReference) :
                new ObjectParameter("InternalReference", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_ProductionOrders_Insert", productionOrderIdParameter, salesOrderItemIdParameter, internalReferenceParameter, statusParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_ProductionOrders_Select_Result> Bluephase_ProductionOrders_Select(Nullable<int> productionOrderId)
        {
            var productionOrderIdParameter = productionOrderId.HasValue ?
                new ObjectParameter("ProductionOrderId", productionOrderId) :
                new ObjectParameter("ProductionOrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_ProductionOrders_Select_Result>("Bluephase_ProductionOrders_Select", productionOrderIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_ProductionOrders_SelectAll_Result> Bluephase_ProductionOrders_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_ProductionOrders_SelectAll_Result>("Bluephase_ProductionOrders_SelectAll");
        }
    
        public virtual int Bluephase_ProductionOrders_Update(Nullable<int> productionOrderId, Nullable<int> salesOrderItemId, string internalReference, string status, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var productionOrderIdParameter = productionOrderId.HasValue ?
                new ObjectParameter("ProductionOrderId", productionOrderId) :
                new ObjectParameter("ProductionOrderId", typeof(int));
    
            var salesOrderItemIdParameter = salesOrderItemId.HasValue ?
                new ObjectParameter("SalesOrderItemId", salesOrderItemId) :
                new ObjectParameter("SalesOrderItemId", typeof(int));
    
            var internalReferenceParameter = internalReference != null ?
                new ObjectParameter("InternalReference", internalReference) :
                new ObjectParameter("InternalReference", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_ProductionOrders_Update", productionOrderIdParameter, salesOrderItemIdParameter, internalReferenceParameter, statusParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_PurchaseOrderItems_Delete(Nullable<int> purchaseOrderItemId)
        {
            var purchaseOrderItemIdParameter = purchaseOrderItemId.HasValue ?
                new ObjectParameter("PurchaseOrderItemId", purchaseOrderItemId) :
                new ObjectParameter("PurchaseOrderItemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_PurchaseOrderItems_Delete", purchaseOrderItemIdParameter);
        }
    
        public virtual int Bluephase_PurchaseOrderItems_Insert(Nullable<int> purchaseOrderId, Nullable<int> materialId, Nullable<int> productionOrderId, Nullable<double> quantity, Nullable<System.DateTime> expectedDelivery, Nullable<System.DateTime> actualDelivery, string status, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var purchaseOrderIdParameter = purchaseOrderId.HasValue ?
                new ObjectParameter("PurchaseOrderId", purchaseOrderId) :
                new ObjectParameter("PurchaseOrderId", typeof(int));
    
            var materialIdParameter = materialId.HasValue ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(int));
    
            var productionOrderIdParameter = productionOrderId.HasValue ?
                new ObjectParameter("ProductionOrderId", productionOrderId) :
                new ObjectParameter("ProductionOrderId", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(double));
    
            var expectedDeliveryParameter = expectedDelivery.HasValue ?
                new ObjectParameter("ExpectedDelivery", expectedDelivery) :
                new ObjectParameter("ExpectedDelivery", typeof(System.DateTime));
    
            var actualDeliveryParameter = actualDelivery.HasValue ?
                new ObjectParameter("ActualDelivery", actualDelivery) :
                new ObjectParameter("ActualDelivery", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_PurchaseOrderItems_Insert", purchaseOrderIdParameter, materialIdParameter, productionOrderIdParameter, quantityParameter, expectedDeliveryParameter, actualDeliveryParameter, statusParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_PurchaseOrderItems_Select_Result> Bluephase_PurchaseOrderItems_Select(Nullable<int> purchaseOrderItemId)
        {
            var purchaseOrderItemIdParameter = purchaseOrderItemId.HasValue ?
                new ObjectParameter("PurchaseOrderItemId", purchaseOrderItemId) :
                new ObjectParameter("PurchaseOrderItemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_PurchaseOrderItems_Select_Result>("Bluephase_PurchaseOrderItems_Select", purchaseOrderItemIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_PurchaseOrderItems_SelectAll_Result> Bluephase_PurchaseOrderItems_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_PurchaseOrderItems_SelectAll_Result>("Bluephase_PurchaseOrderItems_SelectAll");
        }
    
        public virtual int Bluephase_PurchaseOrderItems_Update(Nullable<int> purchaseOrderItemId, Nullable<int> purchaseOrderId, Nullable<int> materialId, Nullable<int> productionOrderId, Nullable<double> quantity, Nullable<System.DateTime> expectedDelivery, Nullable<System.DateTime> actualDelivery, string status, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var purchaseOrderItemIdParameter = purchaseOrderItemId.HasValue ?
                new ObjectParameter("PurchaseOrderItemId", purchaseOrderItemId) :
                new ObjectParameter("PurchaseOrderItemId", typeof(int));
    
            var purchaseOrderIdParameter = purchaseOrderId.HasValue ?
                new ObjectParameter("PurchaseOrderId", purchaseOrderId) :
                new ObjectParameter("PurchaseOrderId", typeof(int));
    
            var materialIdParameter = materialId.HasValue ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(int));
    
            var productionOrderIdParameter = productionOrderId.HasValue ?
                new ObjectParameter("ProductionOrderId", productionOrderId) :
                new ObjectParameter("ProductionOrderId", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(double));
    
            var expectedDeliveryParameter = expectedDelivery.HasValue ?
                new ObjectParameter("ExpectedDelivery", expectedDelivery) :
                new ObjectParameter("ExpectedDelivery", typeof(System.DateTime));
    
            var actualDeliveryParameter = actualDelivery.HasValue ?
                new ObjectParameter("ActualDelivery", actualDelivery) :
                new ObjectParameter("ActualDelivery", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_PurchaseOrderItems_Update", purchaseOrderItemIdParameter, purchaseOrderIdParameter, materialIdParameter, productionOrderIdParameter, quantityParameter, expectedDeliveryParameter, actualDeliveryParameter, statusParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_PurchaseOrders_Delete(Nullable<int> purchaseOrderId)
        {
            var purchaseOrderIdParameter = purchaseOrderId.HasValue ?
                new ObjectParameter("PurchaseOrderId", purchaseOrderId) :
                new ObjectParameter("PurchaseOrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_PurchaseOrders_Delete", purchaseOrderIdParameter);
        }
    
        public virtual int Bluephase_PurchaseOrders_Insert(Nullable<int> supplierId, Nullable<int> supplierPersonId, string internalReference, Nullable<System.DateTime> orderedOn, Nullable<bool> hasBeenSent, Nullable<bool> hasBeenApproved, string status, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var supplierPersonIdParameter = supplierPersonId.HasValue ?
                new ObjectParameter("SupplierPersonId", supplierPersonId) :
                new ObjectParameter("SupplierPersonId", typeof(int));
    
            var internalReferenceParameter = internalReference != null ?
                new ObjectParameter("InternalReference", internalReference) :
                new ObjectParameter("InternalReference", typeof(string));
    
            var orderedOnParameter = orderedOn.HasValue ?
                new ObjectParameter("OrderedOn", orderedOn) :
                new ObjectParameter("OrderedOn", typeof(System.DateTime));
    
            var hasBeenSentParameter = hasBeenSent.HasValue ?
                new ObjectParameter("HasBeenSent", hasBeenSent) :
                new ObjectParameter("HasBeenSent", typeof(bool));
    
            var hasBeenApprovedParameter = hasBeenApproved.HasValue ?
                new ObjectParameter("HasBeenApproved", hasBeenApproved) :
                new ObjectParameter("HasBeenApproved", typeof(bool));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_PurchaseOrders_Insert", supplierIdParameter, supplierPersonIdParameter, internalReferenceParameter, orderedOnParameter, hasBeenSentParameter, hasBeenApprovedParameter, statusParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_PurchaseOrders_Select_Result> Bluephase_PurchaseOrders_Select(Nullable<int> purchaseOrderId)
        {
            var purchaseOrderIdParameter = purchaseOrderId.HasValue ?
                new ObjectParameter("PurchaseOrderId", purchaseOrderId) :
                new ObjectParameter("PurchaseOrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_PurchaseOrders_Select_Result>("Bluephase_PurchaseOrders_Select", purchaseOrderIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_PurchaseOrders_SelectAll_Result> Bluephase_PurchaseOrders_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_PurchaseOrders_SelectAll_Result>("Bluephase_PurchaseOrders_SelectAll");
        }
    
        public virtual int Bluephase_PurchaseOrders_Update(Nullable<int> purchaseOrderId, Nullable<int> supplierId, Nullable<int> supplierPersonId, string internalReference, Nullable<System.DateTime> orderedOn, Nullable<bool> hasBeenSent, Nullable<bool> hasBeenApproved, string status, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var purchaseOrderIdParameter = purchaseOrderId.HasValue ?
                new ObjectParameter("PurchaseOrderId", purchaseOrderId) :
                new ObjectParameter("PurchaseOrderId", typeof(int));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var supplierPersonIdParameter = supplierPersonId.HasValue ?
                new ObjectParameter("SupplierPersonId", supplierPersonId) :
                new ObjectParameter("SupplierPersonId", typeof(int));
    
            var internalReferenceParameter = internalReference != null ?
                new ObjectParameter("InternalReference", internalReference) :
                new ObjectParameter("InternalReference", typeof(string));
    
            var orderedOnParameter = orderedOn.HasValue ?
                new ObjectParameter("OrderedOn", orderedOn) :
                new ObjectParameter("OrderedOn", typeof(System.DateTime));
    
            var hasBeenSentParameter = hasBeenSent.HasValue ?
                new ObjectParameter("HasBeenSent", hasBeenSent) :
                new ObjectParameter("HasBeenSent", typeof(bool));
    
            var hasBeenApprovedParameter = hasBeenApproved.HasValue ?
                new ObjectParameter("HasBeenApproved", hasBeenApproved) :
                new ObjectParameter("HasBeenApproved", typeof(bool));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_PurchaseOrders_Update", purchaseOrderIdParameter, supplierIdParameter, supplierPersonIdParameter, internalReferenceParameter, orderedOnParameter, hasBeenSentParameter, hasBeenApprovedParameter, statusParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_SalesOrderItemBatches_Delete(Nullable<int> salesOrderItemBatchId)
        {
            var salesOrderItemBatchIdParameter = salesOrderItemBatchId.HasValue ?
                new ObjectParameter("SalesOrderItemBatchId", salesOrderItemBatchId) :
                new ObjectParameter("SalesOrderItemBatchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_SalesOrderItemBatches_Delete", salesOrderItemBatchIdParameter);
        }
    
        public virtual int Bluephase_SalesOrderItemBatches_Insert(Nullable<int> salesOrderItemId, Nullable<int> batchQuantity, Nullable<System.DateTime> requestedDeliveryDate, string status, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var salesOrderItemIdParameter = salesOrderItemId.HasValue ?
                new ObjectParameter("SalesOrderItemId", salesOrderItemId) :
                new ObjectParameter("SalesOrderItemId", typeof(int));
    
            var batchQuantityParameter = batchQuantity.HasValue ?
                new ObjectParameter("BatchQuantity", batchQuantity) :
                new ObjectParameter("BatchQuantity", typeof(int));
    
            var requestedDeliveryDateParameter = requestedDeliveryDate.HasValue ?
                new ObjectParameter("RequestedDeliveryDate", requestedDeliveryDate) :
                new ObjectParameter("RequestedDeliveryDate", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_SalesOrderItemBatches_Insert", salesOrderItemIdParameter, batchQuantityParameter, requestedDeliveryDateParameter, statusParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_SalesOrderItemBatches_Select_Result> Bluephase_SalesOrderItemBatches_Select(Nullable<int> salesOrderItemBatchId)
        {
            var salesOrderItemBatchIdParameter = salesOrderItemBatchId.HasValue ?
                new ObjectParameter("SalesOrderItemBatchId", salesOrderItemBatchId) :
                new ObjectParameter("SalesOrderItemBatchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_SalesOrderItemBatches_Select_Result>("Bluephase_SalesOrderItemBatches_Select", salesOrderItemBatchIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_SalesOrderItemBatches_SelectAll_Result> Bluephase_SalesOrderItemBatches_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_SalesOrderItemBatches_SelectAll_Result>("Bluephase_SalesOrderItemBatches_SelectAll");
        }
    
        public virtual int Bluephase_SalesOrderItemBatches_Update(Nullable<int> salesOrderItemBatchId, Nullable<int> salesOrderItemId, Nullable<int> batchQuantity, Nullable<System.DateTime> requestedDeliveryDate, string status, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var salesOrderItemBatchIdParameter = salesOrderItemBatchId.HasValue ?
                new ObjectParameter("SalesOrderItemBatchId", salesOrderItemBatchId) :
                new ObjectParameter("SalesOrderItemBatchId", typeof(int));
    
            var salesOrderItemIdParameter = salesOrderItemId.HasValue ?
                new ObjectParameter("SalesOrderItemId", salesOrderItemId) :
                new ObjectParameter("SalesOrderItemId", typeof(int));
    
            var batchQuantityParameter = batchQuantity.HasValue ?
                new ObjectParameter("BatchQuantity", batchQuantity) :
                new ObjectParameter("BatchQuantity", typeof(int));
    
            var requestedDeliveryDateParameter = requestedDeliveryDate.HasValue ?
                new ObjectParameter("RequestedDeliveryDate", requestedDeliveryDate) :
                new ObjectParameter("RequestedDeliveryDate", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_SalesOrderItemBatches_Update", salesOrderItemBatchIdParameter, salesOrderItemIdParameter, batchQuantityParameter, requestedDeliveryDateParameter, statusParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_SalesOrderItems_Delete(Nullable<int> salesOrderItemId)
        {
            var salesOrderItemIdParameter = salesOrderItemId.HasValue ?
                new ObjectParameter("SalesOrderItemId", salesOrderItemId) :
                new ObjectParameter("SalesOrderItemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_SalesOrderItems_Delete", salesOrderItemIdParameter);
        }
    
        public virtual int Bluephase_SalesOrderItems_Insert(Nullable<int> salesOrderId, string customerOrderItemNumber, Nullable<int> partVersionId, Nullable<int> totalQuantity, string status, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var salesOrderIdParameter = salesOrderId.HasValue ?
                new ObjectParameter("SalesOrderId", salesOrderId) :
                new ObjectParameter("SalesOrderId", typeof(int));
    
            var customerOrderItemNumberParameter = customerOrderItemNumber != null ?
                new ObjectParameter("CustomerOrderItemNumber", customerOrderItemNumber) :
                new ObjectParameter("CustomerOrderItemNumber", typeof(string));
    
            var partVersionIdParameter = partVersionId.HasValue ?
                new ObjectParameter("PartVersionId", partVersionId) :
                new ObjectParameter("PartVersionId", typeof(int));
    
            var totalQuantityParameter = totalQuantity.HasValue ?
                new ObjectParameter("TotalQuantity", totalQuantity) :
                new ObjectParameter("TotalQuantity", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_SalesOrderItems_Insert", salesOrderIdParameter, customerOrderItemNumberParameter, partVersionIdParameter, totalQuantityParameter, statusParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_SalesOrderItems_Select_Result> Bluephase_SalesOrderItems_Select(Nullable<int> salesOrderItemId)
        {
            var salesOrderItemIdParameter = salesOrderItemId.HasValue ?
                new ObjectParameter("SalesOrderItemId", salesOrderItemId) :
                new ObjectParameter("SalesOrderItemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_SalesOrderItems_Select_Result>("Bluephase_SalesOrderItems_Select", salesOrderItemIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_SalesOrderItems_SelectAll_Result> Bluephase_SalesOrderItems_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_SalesOrderItems_SelectAll_Result>("Bluephase_SalesOrderItems_SelectAll");
        }
    
        public virtual int Bluephase_SalesOrderItems_Update(Nullable<int> salesOrderItemId, Nullable<int> salesOrderId, string customerOrderItemNumber, Nullable<int> partVersionId, Nullable<int> totalQuantity, string status, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var salesOrderItemIdParameter = salesOrderItemId.HasValue ?
                new ObjectParameter("SalesOrderItemId", salesOrderItemId) :
                new ObjectParameter("SalesOrderItemId", typeof(int));
    
            var salesOrderIdParameter = salesOrderId.HasValue ?
                new ObjectParameter("SalesOrderId", salesOrderId) :
                new ObjectParameter("SalesOrderId", typeof(int));
    
            var customerOrderItemNumberParameter = customerOrderItemNumber != null ?
                new ObjectParameter("CustomerOrderItemNumber", customerOrderItemNumber) :
                new ObjectParameter("CustomerOrderItemNumber", typeof(string));
    
            var partVersionIdParameter = partVersionId.HasValue ?
                new ObjectParameter("PartVersionId", partVersionId) :
                new ObjectParameter("PartVersionId", typeof(int));
    
            var totalQuantityParameter = totalQuantity.HasValue ?
                new ObjectParameter("TotalQuantity", totalQuantity) :
                new ObjectParameter("TotalQuantity", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_SalesOrderItems_Update", salesOrderItemIdParameter, salesOrderIdParameter, customerOrderItemNumberParameter, partVersionIdParameter, totalQuantityParameter, statusParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_SalesOrders_Delete(Nullable<int> salesOrderId)
        {
            var salesOrderIdParameter = salesOrderId.HasValue ?
                new ObjectParameter("SalesOrderId", salesOrderId) :
                new ObjectParameter("SalesOrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_SalesOrders_Delete", salesOrderIdParameter);
        }
    
        public virtual int Bluephase_SalesOrders_Insert(Nullable<int> customerId, string orderNumber, Nullable<System.DateTime> receivedDate, Nullable<int> personId, Nullable<bool> hasBeenAcknowledged, Nullable<bool> hasBeenApproved, string status, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));
    
            var receivedDateParameter = receivedDate.HasValue ?
                new ObjectParameter("ReceivedDate", receivedDate) :
                new ObjectParameter("ReceivedDate", typeof(System.DateTime));
    
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var hasBeenAcknowledgedParameter = hasBeenAcknowledged.HasValue ?
                new ObjectParameter("HasBeenAcknowledged", hasBeenAcknowledged) :
                new ObjectParameter("HasBeenAcknowledged", typeof(bool));
    
            var hasBeenApprovedParameter = hasBeenApproved.HasValue ?
                new ObjectParameter("HasBeenApproved", hasBeenApproved) :
                new ObjectParameter("HasBeenApproved", typeof(bool));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_SalesOrders_Insert", customerIdParameter, orderNumberParameter, receivedDateParameter, personIdParameter, hasBeenAcknowledgedParameter, hasBeenApprovedParameter, statusParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_SalesOrders_Select_Result> Bluephase_SalesOrders_Select(Nullable<int> salesOrderId)
        {
            var salesOrderIdParameter = salesOrderId.HasValue ?
                new ObjectParameter("SalesOrderId", salesOrderId) :
                new ObjectParameter("SalesOrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_SalesOrders_Select_Result>("Bluephase_SalesOrders_Select", salesOrderIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_SalesOrders_SelectAll_Result> Bluephase_SalesOrders_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_SalesOrders_SelectAll_Result>("Bluephase_SalesOrders_SelectAll");
        }
    
        public virtual int Bluephase_SalesOrders_Update(Nullable<int> salesOrderId, Nullable<int> customerId, string orderNumber, Nullable<System.DateTime> receivedDate, Nullable<int> personId, Nullable<bool> hasBeenAcknowledged, Nullable<bool> hasBeenApproved, string status, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var salesOrderIdParameter = salesOrderId.HasValue ?
                new ObjectParameter("SalesOrderId", salesOrderId) :
                new ObjectParameter("SalesOrderId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));
    
            var receivedDateParameter = receivedDate.HasValue ?
                new ObjectParameter("ReceivedDate", receivedDate) :
                new ObjectParameter("ReceivedDate", typeof(System.DateTime));
    
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var hasBeenAcknowledgedParameter = hasBeenAcknowledged.HasValue ?
                new ObjectParameter("HasBeenAcknowledged", hasBeenAcknowledged) :
                new ObjectParameter("HasBeenAcknowledged", typeof(bool));
    
            var hasBeenApprovedParameter = hasBeenApproved.HasValue ?
                new ObjectParameter("HasBeenApproved", hasBeenApproved) :
                new ObjectParameter("HasBeenApproved", typeof(bool));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_SalesOrders_Update", salesOrderIdParameter, customerIdParameter, orderNumberParameter, receivedDateParameter, personIdParameter, hasBeenAcknowledgedParameter, hasBeenApprovedParameter, statusParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_SupplierAddresses_Delete(Nullable<int> supplierId, Nullable<int> addressId)
        {
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_SupplierAddresses_Delete", supplierIdParameter, addressIdParameter);
        }
    
        public virtual int Bluephase_SupplierAddresses_Insert(Nullable<int> supplierId, Nullable<int> addressId, string description, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_SupplierAddresses_Insert", supplierIdParameter, addressIdParameter, descriptionParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_SupplierAddresses_Select_Result> Bluephase_SupplierAddresses_Select(Nullable<int> supplierId, Nullable<int> addressId)
        {
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_SupplierAddresses_Select_Result>("Bluephase_SupplierAddresses_Select", supplierIdParameter, addressIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_SupplierAddresses_SelectAll_Result> Bluephase_SupplierAddresses_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_SupplierAddresses_SelectAll_Result>("Bluephase_SupplierAddresses_SelectAll");
        }
    
        public virtual int Bluephase_SupplierAddresses_Update(Nullable<int> supplierId, Nullable<int> addressId, string description, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_SupplierAddresses_Update", supplierIdParameter, addressIdParameter, descriptionParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_SupplierContacts_Delete(Nullable<int> supplierId, Nullable<int> personId)
        {
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_SupplierContacts_Delete", supplierIdParameter, personIdParameter);
        }
    
        public virtual int Bluephase_SupplierContacts_Insert(Nullable<int> supplierId, Nullable<int> personId, string position, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_SupplierContacts_Insert", supplierIdParameter, personIdParameter, positionParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_SupplierContacts_Select_Result> Bluephase_SupplierContacts_Select(Nullable<int> supplierId, Nullable<int> personId)
        {
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_SupplierContacts_Select_Result>("Bluephase_SupplierContacts_Select", supplierIdParameter, personIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_SupplierContacts_SelectAll_Result> Bluephase_SupplierContacts_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_SupplierContacts_SelectAll_Result>("Bluephase_SupplierContacts_SelectAll");
        }
    
        public virtual int Bluephase_SupplierContacts_Update(Nullable<int> supplierId, Nullable<int> personId, string position, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_SupplierContacts_Update", supplierIdParameter, personIdParameter, positionParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int Bluephase_Suppliers_Delete(Nullable<int> supplierId)
        {
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_Suppliers_Delete", supplierIdParameter);
        }
    
        public virtual int Bluephase_Suppliers_Insert(string name, string terms, Nullable<bool> isApproved, Nullable<System.DateTime> approvedDate, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var termsParameter = terms != null ?
                new ObjectParameter("Terms", terms) :
                new ObjectParameter("Terms", typeof(string));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            var approvedDateParameter = approvedDate.HasValue ?
                new ObjectParameter("ApprovedDate", approvedDate) :
                new ObjectParameter("ApprovedDate", typeof(System.DateTime));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_Suppliers_Insert", nameParameter, termsParameter, isApprovedParameter, approvedDateParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual ObjectResult<Bluephase_Suppliers_Select_Result> Bluephase_Suppliers_Select(Nullable<int> supplierId)
        {
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_Suppliers_Select_Result>("Bluephase_Suppliers_Select", supplierIdParameter);
        }
    
        public virtual ObjectResult<Bluephase_Suppliers_SelectAll_Result> Bluephase_Suppliers_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bluephase_Suppliers_SelectAll_Result>("Bluephase_Suppliers_SelectAll");
        }
    
        public virtual int Bluephase_Suppliers_Update(Nullable<int> supplierId, string name, string terms, Nullable<bool> isApproved, Nullable<System.DateTime> approvedDate, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var termsParameter = terms != null ?
                new ObjectParameter("Terms", terms) :
                new ObjectParameter("Terms", typeof(string));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            var approvedDateParameter = approvedDate.HasValue ?
                new ObjectParameter("ApprovedDate", approvedDate) :
                new ObjectParameter("ApprovedDate", typeof(System.DateTime));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bluephase_Suppliers_Update", supplierIdParameter, nameParameter, termsParameter, isApprovedParameter, approvedDateParameter, createdOnParameter, modifiedOnParameter);
        }
    }
}
